name: Publish to Maven Central

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # fetch tags too

      - name: Get next version
        id: version
        run: |
          # Get latest tag (or default to 1.0.0 if none exist)
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          echo "Current tag: $TAG"

          # Strip leading "v"
          VERSION=${TAG#v}

          # Split into major.minor.patch
          IFS='.' read -r major minor patch <<< "$VERSION"

          # If there were no tags yet, start from 1.1.0
          if [ "$VERSION" = "1.0.0" ]; then
            NEW_VERSION="1.1.0"
          else
            NEW_VERSION="$major.$minor.$((patch+1))"
          fi

          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Setup gradle.properties
        run: |
          echo "android.useAndroidX=true" >> gradle.properties
          echo "android.nonTransitiveRClass=true" >> gradle.properties
          echo "enableJetifier=true" >> gradle.properties

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3

      - name: Publish to Maven Central
        run: ./gradlew publishAndReleaseToMavenCentral -Pversion=${{ steps.version.outputs.new_version }} --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

      - name: Tag new version
        if: success() # only tag if publish succeeded
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${{ steps.version.outputs.new_version }}
          git push origin v${{ steps.version.outputs.new_version }}
